// Mocks generated by Mockito 5.4.5 from annotations
// in warehouse_receipt/test/data/repositories/receipt_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:warehouse_receipt/data/data_sources/receipt_remote_data_source.dart'
    as _i2;
import 'package:warehouse_receipt/data/models/receipt.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ReceiptRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockReceiptRemoteDataSource extends _i1.Mock
    implements _i2.ReceiptRemoteDataSource {
  @override
  _i3.Future<void> addReceipt(_i4.Receipt? receipt) =>
      (super.noSuchMethod(
            Invocation.method(#addReceipt, [receipt]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.Receipt>> getAllReceipts() =>
      (super.noSuchMethod(
            Invocation.method(#getAllReceipts, []),
            returnValue: _i3.Future<List<_i4.Receipt>>.value(<_i4.Receipt>[]),
            returnValueForMissingStub: _i3.Future<List<_i4.Receipt>>.value(
              <_i4.Receipt>[],
            ),
          )
          as _i3.Future<List<_i4.Receipt>>);

  @override
  _i3.Future<_i4.Receipt?> getReceiptById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getReceiptById, [id]),
            returnValue: _i3.Future<_i4.Receipt?>.value(),
            returnValueForMissingStub: _i3.Future<_i4.Receipt?>.value(),
          )
          as _i3.Future<_i4.Receipt?>);

  @override
  _i3.Future<void> deleteReceipt(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteReceipt, [id]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateReceipt(_i4.Receipt? receipt) =>
      (super.noSuchMethod(
            Invocation.method(#updateReceipt, [receipt]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
